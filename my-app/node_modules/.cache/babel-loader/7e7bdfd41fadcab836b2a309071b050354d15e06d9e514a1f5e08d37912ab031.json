{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Attachments\\\\Desktop\\\\AcademicPlatform\\\\my-app\\\\src\\\\Components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Button, Box, Typography, FormControlLabel, Switch } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = ({\n  onUploadSuccess\n}) => {\n  _s();\n  const [courseCode, setCourseCode] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [tags, setTags] = useState({\n    assignments: false,\n    books: false,\n    endtermAssessments: false,\n    lectureSlides: false,\n    midtermAssessments: false,\n    notes: false,\n    programmingAssessments: false,\n    quizzes: false,\n    tutorials: false,\n    videoLectures: false,\n    miscellaneous: false\n  });\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleToggleTag = tag => {\n    setTags(prevTags => ({\n      ...prevTags,\n      // Spread all previous tags\n      [tag]: !prevTags[tag] // Toggle the specific tag\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"You must be logged in to upload.\");\n      return;\n    }\n    try {\n      if (file) {\n        // If a file is selected\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"course_code\", courseCode);\n        formData.append(\"description\", description);\n        formData.append(\"tags\", Object.keys(tags).filter(key => tags[key]).join(\",\"));\n        await axios.post(\"http://127.0.0.1:5000/uploads\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"Upload successful!\");\n        onUploadSuccess(); // Callback to refresh data after upload\n        setCourseCode(\"\");\n        setDescription(\"\");\n        setTags({\n          assignments: false,\n          books: false,\n          endtermAssessments: false,\n          lectureSlides: false,\n          midtermAssessments: false,\n          notes: false,\n          programmingAssessments: false,\n          quizzes: false,\n          tutorials: false,\n          videoLectures: false,\n          miscellaneous: false\n        });\n        setFile(null);\n      } else {\n        alert(\"Please select a file.\");\n      }\n    } catch (error) {\n      console.error(error);\n      if (error.response && error.response.status === 413) {\n        alert(\"File size exceeds the maximum limit of 16 MB.\");\n      } else {\n        alert(\"Error uploading. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      mt: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Upload a File (Max: 16 MB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Course Code\",\n      fullWidth: true,\n      value: courseCode,\n      onChange: e => setCourseCode(e.target.value),\n      margin: \"normal\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      fullWidth: true,\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      margin: \"normal\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Select Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), Object.keys(tags).map(tag => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: tags[tag],\n        onChange: () => handleToggleTag(tag)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this),\n      label: tag.charAt(0).toUpperCase() + tag.slice(1).replace(/([A-Z])/g, \" $1\")\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mt: 2\n      },\n      children: \"Upload File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      style: {\n        marginBottom: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"Tm3YQQbk8IaFgFhxw2Jr4KG84eE=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Box","Typography","FormControlLabel","Switch","jsxDEV","_jsxDEV","UploadForm","onUploadSuccess","_s","courseCode","setCourseCode","description","setDescription","tags","setTags","assignments","books","endtermAssessments","lectureSlides","midtermAssessments","notes","programmingAssessments","quizzes","tutorials","videoLectures","miscellaneous","file","setFile","handleFileChange","e","target","files","handleToggleTag","tag","prevTags","handleSubmit","preventDefault","token","localStorage","getItem","alert","formData","FormData","append","Object","keys","filter","key","join","post","headers","Authorization","error","console","response","status","component","onSubmit","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","margin","required","map","control","checked","charAt","toUpperCase","slice","replace","type","style","marginBottom","color","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Attachments/Desktop/AcademicPlatform/my-app/src/Components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TextField, Button, Box, Typography, FormControlLabel, Switch } from \"@mui/material\";\r\n\r\nconst UploadForm = ({ onUploadSuccess }) => {\r\n  const [courseCode, setCourseCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [tags, setTags] = useState({\r\n    assignments: false,\r\n    books: false,\r\n    endtermAssessments: false,\r\n    lectureSlides: false,\r\n    midtermAssessments: false,\r\n    notes: false,\r\n    programmingAssessments: false,\r\n    quizzes: false,\r\n    tutorials: false,\r\n    videoLectures: false,\r\n    miscellaneous: false,\r\n  });\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleToggleTag = (tag) => {\r\n    setTags((prevTags) => ({\r\n      ...prevTags, // Spread all previous tags\r\n      [tag]: !prevTags[tag], // Toggle the specific tag\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"You must be logged in to upload.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (file) {\r\n        // If a file is selected\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"course_code\", courseCode);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"tags\",\r\n          Object.keys(tags)\r\n            .filter((key) => tags[key])\r\n            .join(\",\")\r\n        );\r\n\r\n        await axios.post(\"http://127.0.0.1:5000/uploads\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        alert(\"Upload successful!\");\r\n        onUploadSuccess(); // Callback to refresh data after upload\r\n        setCourseCode(\"\");\r\n        setDescription(\"\");\r\n        setTags({\r\n          assignments: false,\r\n          books: false,\r\n          endtermAssessments: false,\r\n          lectureSlides: false,\r\n          midtermAssessments: false,\r\n          notes: false,\r\n          programmingAssessments: false,\r\n          quizzes: false,\r\n          tutorials: false,\r\n          videoLectures: false,\r\n          miscellaneous: false,\r\n        });\r\n        setFile(null);\r\n      } else {\r\n        alert(\"Please select a file.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      if (error.response && error.response.status === 413) {\r\n        alert(\"File size exceeds the maximum limit of 16 MB.\");\r\n      } else {\r\n        alert(\"Error uploading. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Upload a File (Max: 16 MB)\r\n      </Typography>\r\n      \r\n      {/* Course Code */}\r\n      <TextField\r\n        label=\"Course Code\"\r\n        fullWidth\r\n        value={courseCode}\r\n        onChange={(e) => setCourseCode(e.target.value)}\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      \r\n      {/* Description */}\r\n      <TextField\r\n        label=\"Description\"\r\n        fullWidth\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      \r\n      {/* Tags */}\r\n      <Typography variant=\"h6\">Select Tags</Typography>\r\n      {Object.keys(tags).map((tag) => (\r\n        <FormControlLabel\r\n          key={tag}\r\n          control={\r\n            <Switch checked={tags[tag]} onChange={() => handleToggleTag(tag)} />\r\n          }\r\n          label={tag.charAt(0).toUpperCase() + tag.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n        />\r\n      ))}\r\n      \r\n      {/* File Upload */}\r\n      <Typography variant=\"body1\" sx={{ mt: 2 }}>\r\n        Upload File:\r\n      </Typography>\r\n      <input type=\"file\" onChange={handleFileChange} style={{ marginBottom: \"16px\" }} />\r\n      \r\n      {/* Submit Button */}\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Submit\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}