# JWT Configuration
JWT_SECRET=your_jwt_secret_key_here

# Cloudinary Configuration
<<<<<<< HEAD
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
CLOUDINARY_API_KEY=your_cloudinary_api_key
CLOUDINARY_API_SECRET=your_cloudinary_api_secret
=======
<<<<<<< HEAD
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
CLOUDINARY_API_KEY=your_cloudinary_api_key
CLOUDINARY_API_SECRET=your_cloudinary_api_secret

# Email Configuration (SMTP)
EMAIL_SERVER=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USERNAME=your_email@iitrpr.ac.in
EMAIL_PASSWORD=your_app_specific_password  # For Gmail, use App Password

# Flask Configuration
FLASK_ENV=development  # Change to 'production' in production
FLASK_APP=app.py
FLASK_DEBUG=1  # Set to 0 in production

# Security Configuration
CORS_ORIGINS=http://localhost:3000  # Comma-separated list of allowed origins

# Rate Limiting (in seconds)
OTP_RATE_LIMIT=3600  # 1 hour
PASSWORD_RESET_RATE_LIMIT=3600  # 1 hour

# Note: Replace all values with your actual configuration
# Do not commit the actual .env file to version control 
=======
CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=your_api_key
CLOUDINARY_API_SECRET=your_api_secret
>>>>>>> cfd8d8c509b4b877cece4727018e148df12f85fb

# Email Configuration (SMTP)
EMAIL_SERVER=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USERNAME=your_email@iitrpr.ac.in
EMAIL_PASSWORD=your_app_specific_password  # For Gmail, use App Password

# Flask Configuration
FLASK_ENV=development  # Change to 'production' in production
FLASK_APP=app.py
<<<<<<< HEAD
FLASK_DEBUG=1  # Set to 0 in production

# Security Configuration
CORS_ORIGINS=http://localhost:3000  # Comma-separated list of allowed origins

# Rate Limiting (in seconds)
OTP_RATE_LIMIT=3600  # 1 hour
PASSWORD_RESET_RATE_LIMIT=3600  # 1 hour

# Note: Replace all values with your actual configuration
# Do not commit the actual .env file to version control 
=======
FLASK_ENV=development
FLASK_DEBUG=1 
>>>>>>> fad2872af265d079db5dd37c27b5b78c8a55027c
>>>>>>> cfd8d8c509b4b877cece4727018e148df12f85fb
